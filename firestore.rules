rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Root-level tasks collection (used by current app)
    match /tasks/{taskId} {
      // Allow read if user is authenticated and task belongs to them
      allow read: if request.auth != null && 
                     resource.data.userId == request.auth.uid;
      
      // Allow create if user is authenticated and userId matches
      allow create: if request.auth != null && 
                       request.resource.data.userId == request.auth.uid;
      
      // Allow update/delete if user is authenticated and owns the task
      allow update, delete: if request.auth != null && 
                               resource.data.userId == request.auth.uid;
    }
    
    // Root-level lists collection
    match /lists/{listId} {
      allow read: if request.auth != null && 
                     resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
                       request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && 
                               resource.data.userId == request.auth.uid;
    }
    
    // Users collection with subcollections
    match /users/{userId} {
      // Allow read/write if the user is authenticated and matches the userId
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Tasks subcollection (if used)
      match /tasks/{taskId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Lists subcollection (if used)
      match /lists/{listId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Events subcollection (for calendar)
      match /events/{eventId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
  }
}
